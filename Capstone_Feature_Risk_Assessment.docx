CAPSTONE FEATURE RISK ASSESSMENT
Project: [Your Capstone Title]

1. List Features
- SiteDiary (New Entry, Dashboard, History, Reports, Manage Diaries [admin])
- Blog (Create Blog, Drafts, Admin Side [Manage Blog])
- ChatBot (Message Center [chatbot.html], Admin Message Center, Client/Authenticated User [chatbot.js])
- Portfolio (Public [bloglist.html, individualblog.html], Admin [projectmanagement.html] with project creation for portfolio)

VCC CHECKLIST

| Feature/Module | Volatility (L/M/H) | Completeness (L/M/H) | Complexity (L/M/H) | Risk Level (L/M/H) | Notes / Why risky? |
|------------------|--------------------|----------------------|--------------------|--------------------|--------------------|
| SiteDiary        | M                  | M                    | H                  | H                  | Multiple sub-features, admin management, data integrity, and reporting logic. |
| Blog             | L                  | H                    | M                  | M                  | Standard CRUD, but admin moderation and draft logic add some risk. |
| ChatBot          | H                  | M                    | H                  | H                  | Real-time messaging, possible AI integration, user/admin separation, and security. |
| Portfolio        | M                  | M                    | M                  | M                  | Public/private separation, project creation, and content management. |

IDENTIFY THE HIGHEST RISK FEATURE
Based on High Volatility, Low Completeness, and High Complexity, the highest-risk features are:
- SiteDiary
- ChatBot

MITIGATION PLAN
SiteDiary
Risks: Complex logic for entries, history, reporting, admin management, and possible data loss/corruption.
Mitigation:
- Use robust database transactions and validation.
- Start with core diary features, add reporting/admin last.
- Regular backups and audit logs.
- User acceptance testing for workflows.

ChatBot
Risks: Real-time messaging, possible AI/NLP, user/admin separation, security (XSS, data leaks), reliability.
Mitigation:
- Use proven libraries for messaging (e.g., socket.io).
- If using AI, start with rule-based or pre-trained models.
- Sanitize all user input and messages.
- Separate admin/client logic clearly; test permissions.
- Provide fallback (FAQ/manual support) if bot fails.

Risk Identification Using Checklists
- Low Risk Features: Blog
- Medium Risk Features: Portfolio
- High Risk Features: SiteDiary, ChatBot

Risk Assessment and Prioritization
- High Risk: SiteDiary, ChatBot (critical focus)
- Medium Risk: Portfolio (secondary focus)
- Low Risk: Blog (low priority, standard implementation)

Create Mitigation Strategies
High-risk features (SiteDiary, ChatBot):
- Use proven frameworks, modular design, and thorough testing.
- Implement logging, error handling, and rollback mechanisms.
- Start with MVP, add complex features after validation.
- Regular code reviews and security audits.

Medium-risk features (Portfolio):
- Use reliable libraries, limit features at the start.
- Test with sample data, expand after successful trials.

Low-risk features (Blog):
- Use existing frameworks and proven solutions.

General Strategies:
- Reduce risk by adding more resources, tools, or tests
- Avoid risk by simplifying or changing the feature
- Transfer risk by using trusted third-party services
- Accept risk if it has very little impact on the project

Additional Questions
1. How volatile is this module (likelihood of changes)?
   - The ChatBot and SiteDiary modules are highly volatile due to evolving requirements, user feedback, and possible integration with AI or external APIs.
2. What technical complexity is involved?
   - Both require real-time features, advanced data handling, and possibly AI/NLP (for ChatBot), as well as robust admin controls and reporting (for SiteDiary).
3. What security/reliability risks are present?
   - Risks include unauthorized access, data leaks, XSS in chat, data loss in diaries, and system crashes during heavy usage.
4. Are there external dependencies or factors that may fail?
   - Yes. Both may depend on third-party libraries (chat frameworks, reporting tools), cloud/database services, and, for ChatBot, possible AI APIs.

MEMBERS
[List your group members here]
